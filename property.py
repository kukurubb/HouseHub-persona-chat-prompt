from utils import get_probabilities, get_tags
import numpy as np


"""
다른 옵션들과 다르게 1개의 옵션만 선택 가능
"""
class Property:
    def __init__(self):
        self.property_type = ['빌라', '단독/다가구주택', '원룸', '오피스텔', '아파트', '상가주택', '다세대주택', '연립주택', '전원주택']
        self.property_weights = {
            "newlyweds": {              # 신혼부부
                "빌라": 0.7,            # 실용적인 선택
                "단독/다가구주택": 0.4,     
                "원룸": 0.3,
                "오피스텔": 0.8,        # 신혼집으로 선호
                "아파트": 0.9,          # 가장 선호
                "상가주택": 0.2,
                "다세대주택": 0.5,
                "연립주택": 0.6,
                "전원주택": 0.3
            },
            "dinks": {                  # 맞벌이 부부
                "빌라": 0.6,
                "단독/다가구주택": 0.4,
                "원룸": 0.2,
                "오피스텔": 0.8,        # 접근성 좋음
                "아파트": 0.9,          # 가장 선호
                "상가주택": 0.3,
                "다세대주택": 0.5,
                "연립주택": 0.5,
                "전원주택": 0.4
            },
            "college_student": {        # 대학생
                "빌라": 0.4,
                "단독/다가구주택": 0.3,
                "원룸": 0.9,            # 가장 선호
                "오피스텔": 0.8,        # 선호
                "아파트": 0.2,
                "상가주택": 0.1,
                "다세대주택": 0.4,
                "연립주택": 0.3,
                "전원주택": 0.1
            },
            "solo_worker": {           # 직장인
                "빌라": 0.6,
                "단독/다가구주택": 0.3,
                "원룸": 0.7,           # 선호
                "오피스텔": 0.8,       # 가장 선호
                "아파트": 0.6,
                "상가주택": 0.2,
                "다세대주택": 0.5,
                "연립주택": 0.4,
                "전원주택": 0.2
            },
            "investor": {              # 투자자
                "빌라": 0.7,
                "단독/다가구주택": 0.8,    # 수익성 좋음
                "원룸": 0.7,
                "오피스텔": 0.8,
                "아파트": 0.6,
                "상가주택": 0.9,       # 가장 선호
                "다세대주택": 0.8,         # 수익성 좋음
                "연립주택": 0.6,
                "전원주택": 0.4
            },
            "retiree": {              # 은퇴자
                "빌라": 0.5,
                "단독/다가구주택": 0.6,
                "원룸": 0.2,
                "오피스텔": 0.3,
                "아파트": 0.8,         # 선호
                "상가주택": 0.4,
                "다세대주택": 0.5,
                "연립주택": 0.6,
                "전원주택": 0.9        # 가장 선호
            },
            "young_family": {         # 젊은 가족
                "빌라": 0.7,
                "단독/다가구주택": 0.5,
                "원룸": 0.1,
                "오피스텔": 0.4,
                "아파트": 0.9,         # 가장 선호
                "상가주택": 0.2,
                "다세대주택": 0.6,
                "연립주택": 0.7,
                "전원주택": 0.5
            },
            "high_earner": {          # 고소득자
                "빌라": 0.4,
                "단독/다가구주택": 0.7,
                "원룸": 0.1,
                "오피스텔": 0.6,
                "아파트": 0.9,         # 가장 선호
                "상가주택": 0.5,
                "다세대주택": 0.3,
                "연립주택": 0.4,
                "전원주택": 0.8        # 선호
            },
            "corporate_buyer": {      # 법인 구매자
                "빌라": 0.6,
                "단독/다가구주택": 0.7,
                "원룸": 0.5,
                "오피스텔": 0.8,       # 선호
                "아파트": 0.6,
                "상가주택": 0.9,       # 가장 선호
                "다세대주택": 0.7,
                "연립주택": 0.5,
                "전원주택": 0.3
            },
            "foreigner": {           # 외국인
                "빌라": 0.5,
                "단독/다가구주택": 0.3,
                "원룸": 0.7,          # 선호
                "오피스텔": 0.9,      # 가장 선호
                "아파트": 0.6,
                "상가주택": 0.2,
                "다세대주택": 0.4,
                "연립주택": 0.4,
                "전원주택": 0.2
            },
            "relocator": {           # 이주민
                "빌라": 0.7,         # 선호
                "단독/다가구주택": 0.4,
                "원룸": 0.6,
                "오피스텔": 0.7,     # 선호
                "아파트": 0.9,       # 가장 선호
                "상가주택": 0.3,
                "다세대주택": 0.5,
                "연립주택": 0.6,
                "전원주택": 0.4
            },
            "single_mom_or_dad": {   # 한부모
                "빌라": 0.8,         # 선호
                "단독/다가구주택": 0.5,
                "원룸": 0.4,
                "오피스텔": 0.6,
                "아파트": 0.9,       # 가장 선호
                "상가주택": 0.3,
                "다세대주택": 0.6,
                "연립주택": 0.7,
                "전원주택": 0.3
            },
            "digital_nomad": {       # 디지털 노마드
                "빌라": 0.5,
                "단독/다가구주택": 0.3,
                "원룸": 0.8,         # 선호
                "오피스텔": 0.9,     # 가장 선호
                "아파트": 0.4,
                "상가주택": 0.2,
                "다세대주택": 0.4,
                "연립주택": 0.3,
                "전원주택": 0.3
            },
            "military_family": {     # 군인 가족
                "빌라": 0.8,         # 선호
                "단독/다가구주택": 0.5,
                "원룸": 0.3,
                "오피스텔": 0.6,
                "아파트": 0.9,       # 가장 선호
                "상가주택": 0.2,
                "다세대주택": 0.5,
                "연립주택": 0.6,
                "전원주택": 0.3
            },
            "job_seeker": {         # 구직자
                "빌라": 0.5,
                "단독/다가구주택": 0.2,
                "원룸": 0.9,         # 가장 선호
                "오피스텔": 0.8,     # 선호
                "아파트": 0.3,
                "상가주택": 0.1,
                "다세대주택": 0.4,
                "연립주택": 0.3,
                "전원주택": 0.1
            },
            "startup_founder": {     # 스타트업 창업자
                "빌라": 0.5,
                "단독/다가구주택": 0.6,
                "원룸": 0.3,
                "오피스텔": 0.8,     # 선호
                "아파트": 0.7,
                "상가주택": 0.9,     # 가장 선호
                "다세대주택": 0.6,
                "연립주택": 0.4,
                "전원주택": 0.3
            },
            "creative_worker": {     # 창작직
                "빌라": 0.6,
                "단독/다가구주택": 0.8,  # 선호
                "원룸": 0.5,
                "오피스텔": 0.7,
                "아파트": 0.5,
                "상가주택": 0.7,
                "다세대주택": 0.5,
                "연립주택": 0.4,
                "전원주택": 0.9      # 가장 선호
            },
            "weekend_commuter_dad": { # 주말부부
                "빌라": 0.5,
                "단독/다가구주택": 0.3,
                "원룸": 0.8,          # 선호
                "오피스텔": 0.9,      # 가장 선호
                "아파트": 0.6,
                "상가주택": 0.2,
                "다세대주택": 0.4,
                "연립주택": 0.4,
                "전원주택": 0.3
            }
        }

    """
    가장 높은 값을 가지는 하나의 매물 종류만 반환
    """
    def get_property_type(self, role):
        property_weight = np.array(list(self.property_weights[role].values()))
        num_tags = len(self.property_type)

        probabilities = property_weight * get_probabilities(num_tags)
        max_index = np.argmax(probabilities)

        return self.property_type[max_index]